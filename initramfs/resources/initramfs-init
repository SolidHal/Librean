#!/bin/busybox sh
# shellcheck shell=sh
# shellcheck disable=SC2039
#
# Really, this should be ash, not sh, but shellcheck doesn't support ash, see
# https://github.com/koalaman/shellcheck/issues/853
# SC2039 is there because of that (local/== unsupported in sh, work in ash)

# This is the init script built into the PrawnOS initramfs

# This file is part of PrawnOS (https://www.prawnos.com)
# Copyright (c) 2018 Hal Emmerich <hal@halemmerich.com>

# PrawnOS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.

# PrawnOS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with PrawnOS.  If not, see <https://www.gnu.org/licenses/>.

echo In PrawnOS Init

#used to parse the kernel cmdline
cmdline() {
    local value
    value=" $(cat /proc/cmdline) "
    value="${value##* ${1}=}"
    value="${value%% *}"
    [ "${value}" != "" ] && echo "${value}"
}


[ -d /dev ] || mkdir -m 0755 /dev
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp


mount -n -t proc     proc      /proc
mount -n -t sysfs    sysfs     /sys
mount -n -t devtmpfs devtmpfs  /dev

# TODO waiting for the sd card to be detected by the kernel... sleeping is lame
# why isn't rootwait/root cmdline arg working here?
sleep 2


# get the root device, so we can find the boot partiton
STORAGENODE=$(cmdline root)

#TODO it would be nice if uboot put a root=/dev/mmc* on the cmdline for us
if echo $STORAGENODE | grep -q "DEV=sdcard"; then
  echo "Booting from sd..."
  BLKID=$(/sbin/blkid | grep "sdrootfs" )

elif echo $STORAGENODE | grep -q "DEV=emmc"; then
  echo "Booting from emmc..."
  BLKID=$(/sbin/blkid | grep "emmcrootfs" )

else
  echo $STORAGENODE is not a valid boot device
  exit 1

fi


echo BLKID: $BLKID
# strip off everything after the colon
ROOTFS="${BLKID%:*}"
echo ROOTFS: $ROOTFS

# mount & boot
mkdir -p /newroot
mount  $ROOTFS /newroot || mount /dev/mmcblk2p2 /newroot

umount /sys
umount /proc

#switch to the new rootfs
exec switch_root /newroot /sbin/init